using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;

namespace Dojo.Net.Plus
{
    
    /// <summary>
    /// Outputs the request body generated by Refit to the console for debugging purposes
    /// </summary>
    public class LoggingHandler : DelegatingHandler
    {
        private readonly ILogger<LoggingHandler> _logger;

        public LoggingHandler(ILogger<LoggingHandler> logger)
        {
            _logger = logger;
        }

        protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request,
            CancellationToken cancellationToken)
        {
            _logger.LogInformation("Request: {Method} {Url}", request.Method, request.RequestUri);

            if (request.Content != null)
            {
                var body = await request.Content.ReadAsStringAsync();
                _logger.LogInformation("Request Body: {Body}", body);
            }

            var response = await base.SendAsync(request, cancellationToken);

            _logger.LogInformation("Response: {StatusCode}", response.StatusCode);

            return response;
        }
    }
}